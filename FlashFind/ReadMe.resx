<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERET
        FhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCACrAI8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD422n0oII7VJSP901KkABhjrTXII4ptFPlAUdRT9wqOihq4Cvg
        nNb/AId8LXmq31pExEUM1u10745SIOVz9SRgfUVgxI0sqRIMs7BVHqTXvVlbR2+oeKLSAgxaUljpkXqF
        RG3fm+410YOEamIjTltZt+kVf8T0cqwkcViqdKezaRladpdhp9uIraCOKMdyMs3uT3qW70+0u7dklgim
        j6EMvT/CuI8deIrpL+TTrRzGIziRx1+g9OKz/CXiTUbTV4Ip7lpbeZxHIHOcAnGfwrmliK7ftE9O3kfo
        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
        2Q==
</value>
  </data>
</root>